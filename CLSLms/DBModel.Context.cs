//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CLSLms
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LeopinkLMSDBEntities : DbContext
    {
        public LeopinkLMSDBEntities()
            : base("name=LeopinkLMSDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<ACLAction> ACLActions { get; set; }
        public virtual DbSet<ACLMatrix> ACLMatrices { get; set; }
        public virtual DbSet<AppConstant> AppConstants { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUserRole> AspNetUserRoles { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<CategoryInfo> CategoryInfoes { get; set; }
        public virtual DbSet<Certificate> Certificates { get; set; }
        public virtual DbSet<CertificateInfo> CertificateInfoes { get; set; }
        public virtual DbSet<CloudRoomCartItem> CloudRoomCartItems { get; set; }
        public virtual DbSet<CourseInfo> CourseInfoes { get; set; }
        public virtual DbSet<ElearningStatusHistory> ElearningStatusHistories { get; set; }
        public virtual DbSet<ELMAH_Error> ELMAH_Error { get; set; }
        public virtual DbSet<EmailLog> EmailLogs { get; set; }
        public virtual DbSet<Group> Groups { get; set; }
        public virtual DbSet<GroupCourse> GroupCourses { get; set; }
        public virtual DbSet<GroupDocument> GroupDocuments { get; set; }
        public virtual DbSet<GroupHomepage> GroupHomepages { get; set; }
        public virtual DbSet<GroupHomepageInfo> GroupHomepageInfoes { get; set; }
        public virtual DbSet<GroupInfo> GroupInfoes { get; set; }
        public virtual DbSet<HelpContent> HelpContents { get; set; }
        public virtual DbSet<InstanceInfo> InstanceInfoes { get; set; }
        public virtual DbSet<Language> Languages { get; set; }
        public virtual DbSet<License> Licenses { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Organisation> Organisations { get; set; }
        public virtual DbSet<OrganisationInfo> OrganisationInfoes { get; set; }
        public virtual DbSet<s_cmi> s_cmi { get; set; }
        public virtual DbSet<s_cmiTree> s_cmiTree { get; set; }
        public virtual DbSet<s_commentsFromLearner> s_commentsFromLearner { get; set; }
        public virtual DbSet<s_commentsFromLMS> s_commentsFromLMS { get; set; }
        public virtual DbSet<s_communication> s_communication { get; set; }
        public virtual DbSet<s_correctResponse> s_correctResponse { get; set; }
        public virtual DbSet<s_courseInfo> s_courseInfo { get; set; }
        public virtual DbSet<s_interaction> s_interaction { get; set; }
        public virtual DbSet<s_interactionObjectives> s_interactionObjectives { get; set; }
        public virtual DbSet<s_itemInfo> s_itemInfo { get; set; }
        public virtual DbSet<s_objective> s_objective { get; set; }
        public virtual DbSet<s_objectivesInfo> s_objectivesInfo { get; set; }
        public virtual DbSet<s_relationship> s_relationship { get; set; }
        public virtual DbSet<s_scoComments> s_scoComments { get; set; }
        public virtual DbSet<s_score> s_score { get; set; }
        public virtual DbSet<s_scormWizard> s_scormWizard { get; set; }
        public virtual DbSet<s_studentHistory> s_studentHistory { get; set; }
        public virtual DbSet<UserCourse> UserCourses { get; set; }
        public virtual DbSet<UserDocument> UserDocuments { get; set; }
        public virtual DbSet<UserDocumentHit> UserDocumentHits { get; set; }
        public virtual DbSet<UserGroup> UserGroups { get; set; }
        public virtual DbSet<UserLogin> UserLogins { get; set; }
        public virtual DbSet<UserProfileSetting> UserProfileSettings { get; set; }
        public virtual DbSet<UserProfileSettingsInfo> UserProfileSettingsInfoes { get; set; }
        public virtual DbSet<UserProfileSettingsOrg> UserProfileSettingsOrgs { get; set; }
        public virtual DbSet<UserProfileSettingsOrgValue> UserProfileSettingsOrgValues { get; set; }
        public virtual DbSet<Email> Emails { get; set; }
        public virtual DbSet<course_state> course_state { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<QuestionType> QuestionTypes { get; set; }
        public virtual DbSet<QuestionBank> QuestionBanks { get; set; }
        public virtual DbSet<ElearningStatu> ElearningStatus { get; set; }
        public virtual DbSet<ElearningStatusArchive> ElearningStatusArchives { get; set; }
        public virtual DbSet<GroupQuiz> GroupQuizs { get; set; }
        public virtual DbSet<UserQuiz> UserQuizs { get; set; }
        public virtual DbSet<SupportInfo> SupportInfoes { get; set; }
        public virtual DbSet<CourseFeedback> CourseFeedbacks { get; set; }
        public virtual DbSet<CourseUnit> CourseUnits { get; set; }
        public virtual DbSet<UserCourseRequest> UserCourseRequests { get; set; }
        public virtual DbSet<UserQuizScore> UserQuizScores { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<DocumentManager> DocumentManagers { get; set; }
        public virtual DbSet<UserScheduledEvent> UserScheduledEvents { get; set; }
        public virtual DbSet<Topic> Topics { get; set; }
        public virtual DbSet<TopicUnit> TopicUnits { get; set; }
        public virtual DbSet<CourseUnitStatu> CourseUnitStatus { get; set; }
        public virtual DbSet<Answer> Answers { get; set; }
        public virtual DbSet<Quize> Quizes { get; set; }
        public virtual DbSet<UserQuizRecord> UserQuizRecords { get; set; }
        public virtual DbSet<CourseFAQ> CourseFAQs { get; set; }
        public virtual DbSet<District> Districts { get; set; }
        public virtual DbSet<DistrictBlock> DistrictBlocks { get; set; }
        public virtual DbSet<DistrictSchool> DistrictSchools { get; set; }
        public virtual DbSet<ParentStudent> ParentStudents { get; set; }
        public virtual DbSet<UserProfile> UserProfiles { get; set; }
        public virtual DbSet<SelfRegistration> SelfRegistrations { get; set; }
        public virtual DbSet<ChatRoom> ChatRooms { get; set; }
        public virtual DbSet<SSOLoginDetail> SSOLoginDetails { get; set; }
        public virtual DbSet<ssothit> ssothits { get; set; }
    
        public virtual int AddUpdateELStatus(Nullable<long> courseID, Nullable<long> userID, Nullable<long> elStatusID, string sessionID, ObjectParameter elsID)
        {
            var courseIDParameter = courseID.HasValue ?
                new ObjectParameter("CourseID", courseID) :
                new ObjectParameter("CourseID", typeof(long));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(long));
    
            var elStatusIDParameter = elStatusID.HasValue ?
                new ObjectParameter("ElStatusID", elStatusID) :
                new ObjectParameter("ElStatusID", typeof(long));
    
            var sessionIDParameter = sessionID != null ?
                new ObjectParameter("SessionID", sessionID) :
                new ObjectParameter("SessionID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUpdateELStatus", courseIDParameter, userIDParameter, elStatusIDParameter, sessionIDParameter, elsID);
        }
    
        public virtual ObjectResult<string> ELMAH_GetErrorsXml(string application, Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter totalCount)
        {
            var applicationParameter = application != null ?
                new ObjectParameter("Application", application) :
                new ObjectParameter("Application", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ELMAH_GetErrorsXml", applicationParameter, pageIndexParameter, pageSizeParameter, totalCount);
        }
    
        public virtual ObjectResult<string> ELMAH_GetErrorXml(string application, Nullable<System.Guid> errorId)
        {
            var applicationParameter = application != null ?
                new ObjectParameter("Application", application) :
                new ObjectParameter("Application", typeof(string));
    
            var errorIdParameter = errorId.HasValue ?
                new ObjectParameter("ErrorId", errorId) :
                new ObjectParameter("ErrorId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ELMAH_GetErrorXml", applicationParameter, errorIdParameter);
        }
    
        public virtual int ELMAH_LogError(Nullable<System.Guid> errorId, string application, string host, string type, string source, string message, string user, string allXml, Nullable<int> statusCode, Nullable<System.DateTime> timeUtc)
        {
            var errorIdParameter = errorId.HasValue ?
                new ObjectParameter("ErrorId", errorId) :
                new ObjectParameter("ErrorId", typeof(System.Guid));
    
            var applicationParameter = application != null ?
                new ObjectParameter("Application", application) :
                new ObjectParameter("Application", typeof(string));
    
            var hostParameter = host != null ?
                new ObjectParameter("Host", host) :
                new ObjectParameter("Host", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var sourceParameter = source != null ?
                new ObjectParameter("Source", source) :
                new ObjectParameter("Source", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var allXmlParameter = allXml != null ?
                new ObjectParameter("AllXml", allXml) :
                new ObjectParameter("AllXml", typeof(string));
    
            var statusCodeParameter = statusCode.HasValue ?
                new ObjectParameter("StatusCode", statusCode) :
                new ObjectParameter("StatusCode", typeof(int));
    
            var timeUtcParameter = timeUtc.HasValue ?
                new ObjectParameter("TimeUtc", timeUtc) :
                new ObjectParameter("TimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ELMAH_LogError", errorIdParameter, applicationParameter, hostParameter, typeParameter, sourceParameter, messageParameter, userParameter, allXmlParameter, statusCodeParameter, timeUtcParameter);
        }
    
        [DbFunction("LeopinkLMSDBEntities", "GetAssignedAndCompletedCourse")]
        public virtual IQueryable<GetAssignedAndCompletedCourse_Result> GetAssignedAndCompletedCourse(Nullable<int> organisationId)
        {
            var organisationIdParameter = organisationId.HasValue ?
                new ObjectParameter("OrganisationId", organisationId) :
                new ObjectParameter("OrganisationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GetAssignedAndCompletedCourse_Result>("[LeopinkLMSDBEntities].[GetAssignedAndCompletedCourse](@OrganisationId)", organisationIdParameter);
        }
    
        public virtual ObjectResult<GetAssignedCourseGroup_Result> GetAssignedCourseGroup(Nullable<long> courseId, Nullable<long> userId, Nullable<int> languageId)
        {
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAssignedCourseGroup_Result>("GetAssignedCourseGroup", courseIdParameter, userIdParameter, languageIdParameter);
        }
    
        public virtual ObjectResult<GetAssignedCoursesToUser_Result> GetAssignedCoursesToUser(Nullable<long> userId, Nullable<int> languageId, Nullable<long> courseId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAssignedCoursesToUser_Result>("GetAssignedCoursesToUser", userIdParameter, languageIdParameter, courseIdParameter);
        }
    
        public virtual ObjectResult<GetAssignedDocumentGroup_Result> GetAssignedDocumentGroup(Nullable<long> documentId, Nullable<long> userId, Nullable<int> languageId)
        {
            var documentIdParameter = documentId.HasValue ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAssignedDocumentGroup_Result>("GetAssignedDocumentGroup", documentIdParameter, userIdParameter, languageIdParameter);
        }
    
        public virtual ObjectResult<GetAssignedDocumentsToUser_Result> GetAssignedDocumentsToUser(Nullable<long> userId, Nullable<int> languageId, Nullable<long> documentId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            var documentIdParameter = documentId.HasValue ?
                new ObjectParameter("DocumentId", documentId) :
                new ObjectParameter("DocumentId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAssignedDocumentsToUser_Result>("GetAssignedDocumentsToUser", userIdParameter, languageIdParameter, documentIdParameter);
        }
    
        public virtual ObjectResult<GetAssignedGroupCourse_Result> GetAssignedGroupCourse(Nullable<long> groupId, Nullable<long> userId, Nullable<int> languageId)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(long));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAssignedGroupCourse_Result>("GetAssignedGroupCourse", groupIdParameter, userIdParameter, languageIdParameter);
        }
    
        public virtual ObjectResult<GetAssignedUserCourse_Result> GetAssignedUserCourse(Nullable<long> userId, Nullable<int> languageId, Nullable<long> loginUserID)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            var loginUserIDParameter = loginUserID.HasValue ?
                new ObjectParameter("LoginUserID", loginUserID) :
                new ObjectParameter("LoginUserID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAssignedUserCourse_Result>("GetAssignedUserCourse", userIdParameter, languageIdParameter, loginUserIDParameter);
        }
    
        public virtual ObjectResult<GetCertificateDetails_Result> GetCertificateDetails(Nullable<long> userId, Nullable<long> courseId, Nullable<int> languageId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(long));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCertificateDetails_Result>("GetCertificateDetails", userIdParameter, courseIdParameter, languageIdParameter);
        }
    
        public virtual ObjectResult<GetCourseReport_Result> GetCourseReport(Nullable<int> organisationId, Nullable<int> courseId, Nullable<int> groupId, Nullable<int> userId)
        {
            var organisationIdParameter = organisationId.HasValue ?
                new ObjectParameter("OrganisationId", organisationId) :
                new ObjectParameter("OrganisationId", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCourseReport_Result>("GetCourseReport", organisationIdParameter, courseIdParameter, groupIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<GetHomePage_Result> GetHomePage(Nullable<int> groupId, Nullable<int> languageId)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHomePage_Result>("GetHomePage", groupIdParameter, languageIdParameter);
        }
    
        public virtual ObjectResult<GetOrganizationLicenseReport_Result> GetOrganizationLicenseReport(Nullable<int> organisationId, Nullable<int> courseId, Nullable<int> groupId, Nullable<int> userId)
        {
            var organisationIdParameter = organisationId.HasValue ?
                new ObjectParameter("OrganisationId", organisationId) :
                new ObjectParameter("OrganisationId", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrganizationLicenseReport_Result>("GetOrganizationLicenseReport", organisationIdParameter, courseIdParameter, groupIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<GetProfileSettingValues_Result> GetProfileSettingValues(Nullable<int> organisationId, Nullable<int> languageId)
        {
            var organisationIdParameter = organisationId.HasValue ?
                new ObjectParameter("OrganisationId", organisationId) :
                new ObjectParameter("OrganisationId", typeof(int));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProfileSettingValues_Result>("GetProfileSettingValues", organisationIdParameter, languageIdParameter);
        }
    
        public virtual ObjectResult<GetUserGroups_Result> GetUserGroups(Nullable<long> userId, Nullable<int> languageId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserGroups_Result>("GetUserGroups", userIdParameter, languageIdParameter);
        }
    
        public virtual int ResetCourseStatus(Nullable<long> userid, string resetCourseIds, Nullable<int> languageId, ObjectParameter successID)
        {
            var useridParameter = userid.HasValue ?
                new ObjectParameter("Userid", userid) :
                new ObjectParameter("Userid", typeof(long));
    
            var resetCourseIdsParameter = resetCourseIds != null ?
                new ObjectParameter("resetCourseIds", resetCourseIds) :
                new ObjectParameter("resetCourseIds", typeof(string));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ResetCourseStatus", useridParameter, resetCourseIdsParameter, languageIdParameter, successID);
        }
    
        public virtual ObjectResult<Rp_SummaryReport_Result> Rp_SummaryReport(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rp_SummaryReport_Result>("Rp_SummaryReport", userIdParameter);
        }
    
        public virtual ObjectResult<Rp_UserGroupReport_Result> Rp_UserGroupReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rp_UserGroupReport_Result>("Rp_UserGroupReport");
        }
    
        public virtual ObjectResult<Rp_UserReport_Result> Rp_UserReport(Nullable<int> groupId, Nullable<int> userId)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rp_UserReport_Result>("Rp_UserReport", groupIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Rp_UserReportChart_Result> Rp_UserReportChart(Nullable<int> groupId, Nullable<int> userId)
        {
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Rp_UserReportChart_Result>("Rp_UserReportChart", groupIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<ScormRetrieveS_CmiValues_Result> ScormRetrieveS_CmiValues(Nullable<int> intStudentId, Nullable<int> intCourseId)
        {
            var intStudentIdParameter = intStudentId.HasValue ?
                new ObjectParameter("intStudentId", intStudentId) :
                new ObjectParameter("intStudentId", typeof(int));
    
            var intCourseIdParameter = intCourseId.HasValue ?
                new ObjectParameter("intCourseId", intCourseId) :
                new ObjectParameter("intCourseId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ScormRetrieveS_CmiValues_Result>("ScormRetrieveS_CmiValues", intStudentIdParameter, intCourseIdParameter);
        }
    
        [DbFunction("LeopinkLMSDBEntities", "Split")]
        public virtual IQueryable<string> Split(string sInputList, string sDelimiter)
        {
            var sInputListParameter = sInputList != null ?
                new ObjectParameter("sInputList", sInputList) :
                new ObjectParameter("sInputList", typeof(string));
    
            var sDelimiterParameter = sDelimiter != null ?
                new ObjectParameter("sDelimiter", sDelimiter) :
                new ObjectParameter("sDelimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<string>("[LeopinkLMSDBEntities].[Split](@sInputList, @sDelimiter)", sInputListParameter, sDelimiterParameter);
        }
    
        public virtual ObjectResult<GetUserDocument_Result> GetUserDocument(Nullable<long> userId, Nullable<int> groupId, Nullable<int> languageId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserDocument_Result>("GetUserDocument", userIdParameter, groupIdParameter, languageIdParameter);
        }
    
        public virtual ObjectResult<GetUserCourseArchiveReport_Result> GetUserCourseArchiveReport(Nullable<int> organisationId, Nullable<int> courseId, Nullable<int> groupId, Nullable<int> selectUserId, Nullable<int> userId)
        {
            var organisationIdParameter = organisationId.HasValue ?
                new ObjectParameter("OrganisationId", organisationId) :
                new ObjectParameter("OrganisationId", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var selectUserIdParameter = selectUserId.HasValue ?
                new ObjectParameter("SelectUserId", selectUserId) :
                new ObjectParameter("SelectUserId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserCourseArchiveReport_Result>("GetUserCourseArchiveReport", organisationIdParameter, courseIdParameter, groupIdParameter, selectUserIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<GetOrganisationUserReport_Result> GetOrganisationUserReport()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOrganisationUserReport_Result>("GetOrganisationUserReport");
        }
    
        public virtual ObjectResult<GetUserCourse_Result> GetUserCourse(Nullable<long> userId, Nullable<int> groupId, Nullable<int> languageId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserCourse_Result>("GetUserCourse", userIdParameter, groupIdParameter, languageIdParameter);
        }
    
        public virtual ObjectResult<GetAssignedQuizGroup_Result> GetAssignedQuizGroup(Nullable<int> quizId, Nullable<long> userId, Nullable<int> languageId)
        {
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("QuizId", quizId) :
                new ObjectParameter("QuizId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAssignedQuizGroup_Result>("GetAssignedQuizGroup", quizIdParameter, userIdParameter, languageIdParameter);
        }
    
        public virtual ObjectResult<GetAssignedQuizsToUser_Result> GetAssignedQuizsToUser(Nullable<long> userId, Nullable<int> languageId, Nullable<int> quizId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            var quizIdParameter = quizId.HasValue ?
                new ObjectParameter("QuizId", quizId) :
                new ObjectParameter("QuizId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAssignedQuizsToUser_Result>("GetAssignedQuizsToUser", userIdParameter, languageIdParameter, quizIdParameter);
        }
    
        public virtual int Scheduler_UserArchive()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Scheduler_UserArchive");
        }
    
        public virtual int Scheduler_UserCourseArchive()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Scheduler_UserCourseArchive");
        }
    
        public virtual ObjectResult<GetUserCoursePassPercentageMonthwise_Result> GetUserCoursePassPercentageMonthwise(Nullable<int> month, Nullable<bool> isQuiz)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var isQuizParameter = isQuiz.HasValue ?
                new ObjectParameter("IsQuiz", isQuiz) :
                new ObjectParameter("IsQuiz", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserCoursePassPercentageMonthwise_Result>("GetUserCoursePassPercentageMonthwise", monthParameter, isQuizParameter);
        }
    
        public virtual ObjectResult<GetUserQuizReport_Result> GetUserQuizReport(Nullable<int> categoryId, Nullable<int> quizID, Nullable<int> groupId, Nullable<int> userId, Nullable<bool> includeExpiry)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var quizIDParameter = quizID.HasValue ?
                new ObjectParameter("QuizID", quizID) :
                new ObjectParameter("QuizID", typeof(int));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var includeExpiryParameter = includeExpiry.HasValue ?
                new ObjectParameter("IncludeExpiry", includeExpiry) :
                new ObjectParameter("IncludeExpiry", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserQuizReport_Result>("GetUserQuizReport", categoryIdParameter, quizIDParameter, groupIdParameter, userIdParameter, includeExpiryParameter);
        }
    
        public virtual ObjectResult<GetUserAllDocuments_Result> GetUserAllDocuments(Nullable<long> userId, Nullable<int> languageId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserAllDocuments_Result>("GetUserAllDocuments", userIdParameter, languageIdParameter);
        }
    
        public virtual ObjectResult<GetCatalogue_Result> GetCatalogue(Nullable<long> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCatalogue_Result>("GetCatalogue", userIdParameter);
        }
    
        public virtual ObjectResult<GetUserAllCourses_Result> GetUserAllCourses(Nullable<long> userId, Nullable<int> languageId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(long));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserAllCourses_Result>("GetUserAllCourses", userIdParameter, languageIdParameter);
        }
    
        public virtual ObjectResult<PTMSummaryReport_Result> PTMSummaryReport(Nullable<int> schoolId, Nullable<int> parentId)
        {
            var schoolIdParameter = schoolId.HasValue ?
                new ObjectParameter("SchoolId", schoolId) :
                new ObjectParameter("SchoolId", typeof(int));
    
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PTMSummaryReport_Result>("PTMSummaryReport", schoolIdParameter, parentIdParameter);
        }
    
        public virtual ObjectResult<GetGroupUserCourse_Result> GetGroupUserCourse()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGroupUserCourse_Result>("GetGroupUserCourse");
        }
    
        public virtual ObjectResult<GetUserCourseReport_Result> GetUserCourseReport(Nullable<int> organisationId, Nullable<int> courseId, Nullable<int> groupId, Nullable<int> userId, Nullable<bool> includeExpiry, Nullable<int> categoryId, string userIDs)
        {
            var organisationIdParameter = organisationId.HasValue ?
                new ObjectParameter("OrganisationId", organisationId) :
                new ObjectParameter("OrganisationId", typeof(int));
    
            var courseIdParameter = courseId.HasValue ?
                new ObjectParameter("CourseId", courseId) :
                new ObjectParameter("CourseId", typeof(int));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var includeExpiryParameter = includeExpiry.HasValue ?
                new ObjectParameter("IncludeExpiry", includeExpiry) :
                new ObjectParameter("IncludeExpiry", typeof(bool));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var userIDsParameter = userIDs != null ?
                new ObjectParameter("UserIDs", userIDs) :
                new ObjectParameter("UserIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserCourseReport_Result>("GetUserCourseReport", organisationIdParameter, courseIdParameter, groupIdParameter, userIdParameter, includeExpiryParameter, categoryIdParameter, userIDsParameter);
        }
    }
}
